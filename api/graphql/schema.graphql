scalar Date

type Like {
	id: ID!
}

enum MatterStatus {
	ENACTED
	COMMITTEE
	WITHDRAWN
	APPROVED
	DISAPPROVED
	FAILED
	ADOPTED
	SPECIAL
	LOCAL
	HEARING
	FILED
	GENERAL
	RECEIVED
}

type Matter {
	id: ID!
	shortDescription: String!
	longDescription: String!
	billWould: String!
	fileNumber: String!
	typeName: String!
	status: MatterStatus!
	committeeName: String!
	lastModifiedAt: Date!
	introducedAt: Date!
	passedAt: Date!
	enactedAt: Date!
	agendaDate: Date!
	enactmentNumber: String!
	nycLegislatureGuid: String!
	updatedAt: Date!

	likes: [Like!]!
	liked: Boolean!
	likeCount: Int!
}

input CreateLikeInput {
	MatterID: ID!
}

type CreateLikeResponse {
	matter: Matter!
}

type Query {
	# bills: [Bill!]!
	matters: [Matter!]!
}

type Mutation {
	createLike(input: CreateLikeInput!): CreateLikeResponse!
}
